#!/bin/sh

function error()
{
	echo "Error: $1"
	exit
}

create_file()
{
	echo "# $1" >> $1.md
	echo "File Creation Complete. $1.md created"
}

function create_sublist()
{
		echo "

### $1" >> $2.md
        	echo "Sublist Created $1 in list $2"
}

function find_flag_index()
{
	for i in "${!a[@]}" ; do
		if [ "${a[$i]}" = $1 ]; then
			idx=$(($i+1))
		fi
	done
}

function flag_exists()
{
	for i in "${!a[@]}" ; do
		if [ "${a[$i]}" = $1 ]; then
			return 0
		fi
	done
	return 1
}

function create()
{
	if [ -z ${a[1]} ]; then
		error "File name must be specified"
	elif [ -a "${a[1]}.md" ]; then
		error "Requested File already exists."
	else
		create_file ${a[1]}
		if flag_exists "-s"; then
			find_flag_index "-s"
			if [ -z "${a[$idx]}" ]; then
				create_sublist "General" $1
			else
				create_sublist "${a[$idx]}" $1
			fi
		fi
	fi
}

function todo_exists()
{
	if [[ $content == *"$1"* ]]; then
		return 0
	else
		return 1
	fi
}

function add_todo()
{
	content=$(cat "${a[1]}.md")
	if todo_exists "$1"; then
		if flag_exists "-f" || flag_exists "--force"; then
			echo "- [ ] $1" >> $2.md
			echo "Todo successfully added"
		elif todo_is_complete "${a[2]}"; then
			error "Todo already exists and is already complete. To add it anyway, add the -f Flag"
		else
			error "Todo already exists. To add it anyway, add the -f Flag"
		fi
	else
		if flag_exists "-s"; then
			find_flag_index "-s"
			if [ "${a[$idx]}" ]; then
				echo "- [ ] $1" >> $2.md
				echo "Todo successfully added"
			else
				create_sublist "${a[$idx]}" $1
				echo "- [ ] $1
				" >> $2.md
				echo "Todo successfully added"
			fi
		fi
	fi
}

function todo()
{
	if [ -z ${a[1]} ] || [ -z "${a[2]}" ]; then
		error "Filename and todo must be specified"
	elif [ -a "${a[1]}.md" ]; then
		add_todo "${a[2]}" ${a[1]}
	else
		if flag_exists "-f" || flag_exists "--force"; then
			create
			add_todo "${a[2]}" ${a[1]}
		else
			error "File does not exist. To force file creation, add the -f Flag"
		fi
	fi
	exit 0
}

function todo_is_complete()
{
	if [[ $content == *"[x] $1"* ]]; then
		return 0
	else
		return 1
	fi
}

function complete()
{
	if [ -a "${a[1]}.md" ]; then
		content=$(cat "${a[1]}.md")
		if todo_exists "${a[2]}"; then
			if todo_is_complete "${a[2]}"; then
				error "Todo is already complete"
			else
				echo "${content/"- [ ] ${a[2]}"/- [x] ${a[2]} }" > "${a[1]}.md"
				echo "${a[2]} successfully marked as complete"
			fi
		else
			error "Todo ${a[2]} does not exist"
		fi
	else
		error "Requested List '${a[1]}' does not exist"
	fi

}

function sublist_exists()
{
	if [[ $content == *"### $1"* ]]; then
		return 0
	else
		return 1
	fi
}

function sublist()
{
	if [ -z ${a[1]} ] || [ -z ${a[2]} ]; then
		error "Filename and sublist must be specified"
	elif [ -a "${a[1]}.md" ]; then
		content=$(cat "${a[1]}.md")
		if sublist_exists ${a[2]}; then
    		error "Sublist ${a[2]} already exists"
		else
			create_sublist ${a[2]} ${a[1]}
		fi
	else
		if flag_exists "-f" || flag_exists "--force"; then
			create
			create_sublist ${a[2]} ${a[1]}
		else
			error "File does not exist. To force file creation, add the -f Flag"
		fi
	fi
}

function should_be_shown()
{
	if flag_exists "--done"; then
		if [[ $1 == *"- [x]"* ]] || [[ $1 == *"### "* ]]; then
			return 0
		else
			return 1
		fi
	elif flag_exists "--open"; then
		if [[ $1 == *"- [ ]"* ]] || [[ $1 == *"### "* ]]; then
			return 0
		else
			return 1
		fi
	elif [[ $1 == *"- [x]"* ]] || [[ $1 == *"- [ ]"* ]] || [[ $1 == *"### "* ]]; then
		return 0
	else
		return 1
	fi
}

function show()
{
	if [ -z ${a[1]} ]; then
    		error "Filename must be specified"
	elif [ -a "${a[1]}.md" ]; then
		while read line; do
			if should_be_shown "$line"; then
	            echo "$line"
			fi
        done < ${a[1]}.md
	else
		error "Requested File ${a[1]} doesn't exist"
	fi
}

a=("$@")
case $1 in
	create)
		create
		;;
	todo)
		todo
		;;
	complete)
		complete
		;;
	sublist)
		sublist
		;;
	show)
		show
		;;
	*)
		echo $"Usage: $0 {create|add|complete|show|todo}"
		exit 0
esac